import { Link } from "react-router-dom";
import { PostSubtitle, PostText, PostTextBold } from "../components/blog/index";

const Post7 = () => {
  return (
    <div>
      <PostSubtitle subtitle="Jako anegdota" />
      <PostText text="Ciekawie siÄ™ zÅ‚oÅ¼yÅ‚o, a jest to przypadkiem, iÅ¼ ostatnie 3 grafiki na blogu przedstawiajÄ… kolejno - mÅ‚odego mÄ™Å¼czyznÄ™ z brodÄ…, starszego mÄ™Å¼czyznÄ™ z brodÄ… a teraz mamy nagrobek." />
      <PostText text="I tak jak my przemijamy, tak nasz kod zostaje." />
      <PostText text="Dobrze jest wiÄ™c pisaÄ‡ czysty kod, nawet majÄ…c nieczyste myÅ›li." />
      <PostText text='MiaÅ‚eÅ› kiedyÅ› sytuacjÄ™, Å¼e patrzyÅ‚eÅ› na czyiÅ› kod i pomyÅ›laÅ‚eÅ› - "Ja pierdyle kto to napisaÅ‚??", a potem - "A, to ja...". Ja jeszcze nie, ale mam nadziejÄ™, Å¼e tak siÄ™ wydarzy.' />
      <PostTextBold text="Czemu? Bo Å¼eby byÄ‡ w czymÅ› dobrym, najpierw trzeba byÄ‡ w tym zÅ‚ym." />
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        MuszÄ™ dostaÄ‡ <span className="font-bold"> druzgocÄ…cy code review </span>
        na twarz, jak kiedyÅ› dyktando z polskiego, caÅ‚e pokreÅ›lone na czerwono,
        Å¼eby wiedzieÄ‡, Å¼e mam nad czym pracowaÄ‡.
      </p>
      <PostText text="OczywiÅ›cie zszedÅ‚em z gÅ‚Ã³wnego wÄ…tku jak dziadziunio, ktÃ³ry opowiadaÅ‚ wnuczkowi o II Wojnie Åšwiatowej a skoÅ„czyÅ‚ na tym, Å¼e babka przesoliÅ‚a grochÃ³wkÄ™. Pardon." />
      <PostSubtitle subtitle="Tyle szumu przez te 3 kropki?" />
      <PostText text='JeÅ›li czytasz mojego bloga regularnie (a oby tak byÅ‚o, w przeciwnym przypadku nie musisz mÃ³wiÄ‡ 3 razy "Bloody Christian", Å¼ebym pojawiÅ‚ siÄ™ za TobÄ… w lustrze), to wiesz, Å¼e ES6 grubo namieszaÅ‚ w JS.' />
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        NamieszaÅ‚ tak grubo, Å¼e te
        <span className="font-bold"> trzy kropki </span>znaczÄ… co innego,
        zaleÅ¼nie od kontekstu, w ktÃ³rym sÄ… uÅ¼yte.
      </p>
      <PostText text='MoÅ¼e ktoÅ› tworzÄ…cy wypiÅ‚ o jednÄ… maÅ‚peczkÄ™ za duÅ¼o, a moÅ¼e stwierdziÅ‚ - "JS juÅ¼ jest i tak zrÄ…bany, dorzuÄ‡my jeszcze jeden syf, niech to wszystko pÅ‚onie".' />
      <PostText text="Anyway, kontekst." />
      <PostSubtitle subtitle="Rest in peace" />
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        Do tego zagadnienia przyda Ci siÄ™ zaznajomienie z{" "}
        <Link
          className="cursor-custom-pointer text-info"
          to={"/blog/funkcje-i-ich-funkcje-oraz-parametry-i-argumenty"}
        >
          funkcjami
        </Link>
        . Znasz? Dobra, to zaczynamy.
      </p>
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        <span className="font-bold"> Rest </span>uÅ¼ywamy jeÅ›li chodzi o funkcje
        i ich parametry, zwraca tablicÄ™. Jest trochÄ™ jak goÅ‚Ä…b zbierajÄ…cy
        resztki z ziemi, a trochÄ™ jak Å¼uk gnojarz, zbierajÄ…cy wszystko do kupy.
      </p>
      <PostText text="Zerknij:" />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> whatBeetleLoveTheMost ={" "}
            <span className="text-info">
              (<span className="text-neutral">...shit</span>){" "}
            </span>{" "}
            <span>{"=> {"}</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">shit</span>){" "}
            <span className="text-base-300">// ['K', 'U', 'P', 'A']</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">shit</span>.join
            <span className="text-info">
              (<span className="text-neutral">{"''"}</span>)
            </span>
            ) <span className="text-base-300">// "KUPA"</span>
          </code>
        </pre>
        <pre>
          <span>{"}"}</span>
        </pre>
        <pre>
          <span>whatBeetleLoveTheMost</span>
          <span className="text-info">
            (<span className="text-success">"K"</span>,{" "}
            <span className="text-success">"U"</span>,{" "}
            <span className="text-success">"P"</span>,{" "}
            <span className="text-success">"A"</span>)
          </span>{" "}
        </pre>
      </div>
      <PostText text="Wszystkie nasze 4 parametry zostaÅ‚y zebrane dosÅ‚ownie i w przenoÅ›ni (!!!) w kupÄ™ i utworzyÅ‚y tablicÄ™!" />
      <PostText text="Drugi console.log z metodÄ… join zamieniÅ‚ tablicÄ™ na string, tworzÄ…c przy tym jeszcze wiÄ™cej kupy." />
      <PostText text="To maÅ‚y krok dla czÅ‚owieka i jeszcze mniejszy dla ludzkoÅ›ci, ale za to wielkie szczÄ™Å›cie dla Å¼uczka gnojarza. Niech siÄ™ chÅ‚opak nacieszy." />
      <PostTextBold text="Co jeszcze potrafi to cudeÅ„ko?" />
      <PostText text="Ogniem z tyÅ‚ka nie zionie nawet i po ostrym kebsie, ale potrafi olaÄ‡ osobne parametry i pozamiataÄ‡ wszystkie pozostaÅ‚e wartoÅ›ci do worka jak odkurzacz NoNo z TeletubisiÃ³w." />
      <PostText text="Obczajmy razem:" />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> gimmeTeletubbies ={" "}
            <span className="text-info">
              (
              <span className="text-neutral">
                teletubby1, teletubby2, ...restOfTeletubbies
              </span>
              ){" "}
            </span>{" "}
            <span>{"=> {"}</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">teletubby1</span>){" "}
            <span className="text-base-300">// "Tinky Winky"</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">teletubby2</span>){" "}
            <span className="text-base-300">// "Dipsy"</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">restOfTeletubbies</span>){" "}
            <span className="text-base-300">// ["Laa-Laa", "Po"]</span>
          </code>
        </pre>
        <pre>
          <span>{"}"}</span>
        </pre>
        <pre>
          <span>gimmeTeletubbies</span>
          <span className="text-info">
            (<span className="text-success">"Tinky Winky"</span>,{" "}
            <span className="text-success">"Dipsy"</span>,{" "}
            <span className="text-success">"Laa-Laa"</span>,{" "}
            <span className="text-success">"Po"</span>)
          </span>{" "}
        </pre>
      </div>
      <PostText text="Co siÄ™ zadziaÅ‚o?" />
      <PostText text="1. Argument Tinky Winky podstawiÅ‚ siÄ™ za parametr teletubby1." />
      <PostText text="2. Argument Dipsy podstawiÅ‚ siÄ™ za parametr teletubby2." />
      <PostText text="3. Argument 3 i 4 a wiÄ™c Laa-Laa i Po zostaÅ‚y zebrane w jedno i wrzucone do tablicy." />
      <PostTextBold
        text="Operator rest musi znajdowaÄ‡ siÄ™ na samym koÅ„cu przy podawaniu
        parametrÃ³w w funkcji."
      />
      <PostText text="Przy takim zapisie (teletuby1, ...restOfTeletubbies, teletubby4) nie udaÅ‚oby siÄ™. ZapamiÄ™taj, rest zbiera tylko resztki." />
      <PostTextBold text="Rest moÅ¼e byÄ‡ tylko jeden przy podawaniu parametrÃ³w." />
      <PostText
        text="Nie moÅ¼e byÄ‡ (...teletubbies2, ...restOfTeletubbies). Nie ma tak, Å¼e dwa
        goÅ‚Ä™bie dojadajÄ… resztki. GoÅ‚Ä…b moÅ¼e byÄ‡ tylko jeden."
      />
      <PostSubtitle subtitle="Nie ma operatora rozpierniczeniaðŸ¥²" />
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        Mamy za to operator <span className="font-bold"> spread</span>, ktÃ³ry
        rozrzuca (lub rozpiernicza, kwestia umowna, okej?) elementy tak jak na
        Å›lubie sypiÄ… w parÄ™ mÅ‚odÄ… miedziakami.
      </p>
      <PostText
        text="Raz sÅ‚yszaÅ‚em jak druhna mÃ³wiÅ‚a, Å¼e gÅ‚owa jest za 15 punktÃ³w, tuÅ‚Ã³w po 10,
      a reszta po 5. Dzieci bawiÅ‚y siÄ™ lepiej niÅ¼ w grze w zbijaka."
      />
      <PostText text="Spread spodobaÅ‚by siÄ™ Dexterowi, bo uÅ¼yjesz go tam, gdzie potrzebujesz coÅ› rozczÅ‚onkowaÄ‡, tylko potem bez wyrzucania ciaÅ‚ do morza, plz." />
      <PostText text="SÄ… 3 miejsca, w ktÃ³rych moÅ¼esz uÅ¼yÄ‡ spread - w argumentach przekazywanych do funkcji, tablicach i obiektach." />
      <PostSubtitle subtitle="Tablice a spread" />
      <PostText text="MoÅ¼esz na przykÅ‚ad rozbudowaÄ‡ tablicÄ™ o nowe wartoÅ›ci, uÅ¼ywajÄ…c spread." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> randomWords = [
            <span className="text-success">"halucynacja"</span>,
            <span className="text-success">"hemoglobina"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> whatAnnoysMe = [
            <span className="text-success">"ziemia"</span>,
            <span className="text-success">"woda"</span>,
            <span className="text-neutral">...randomWords</span>,
            <span className="text-success">"dwutlenek wÄ™gla"</span>,
            <span className="text-success">"taka sytuacja"</span>]
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">randomWords</span>)
            <span className="text-base-300">
              // ["halucynacja", "hemoglobina"]
            </span>
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">whatAnnoysMe</span>)
            <span className="text-base-300">
              // ['ziemia', 'woda', 'halucynacja', 'hemoglobina', 'dwutlenek
              wÄ™gla', 'taka sytuacja']
            </span>
          </code>
        </pre>
      </div>
      <PostText text="Widzisz, spread metaforycznie spuÅ›ciÅ‚ nasze psy ze smyczy, czyli wypakowaÅ‚ do tablicy whatAnnoysMe wszystko co byÅ‚o w tablicy randomWords." />
      <PostText text="Spread to nie tylko rozszerzenie tablicy, ale teÅ¼ idealny sposÃ³b na jej skopiowanie." />
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        JeÅ›li czytaÅ‚eÅ› artykuÅ‚ o tytule{" "}
        <Link
          className="cursor-custom-pointer text-info"
          to={"/blog/dlaczego-programowanie-zniszczylo-moj-zwiazek"}
        >
          Dlaczego programowanie zniszczyÅ‚o mÃ³j zwiÄ…zek
        </Link>
        , to mieliÅ›my tam przykÅ‚ad z metodÄ… mutujÄ…cÄ… tablicÄ™ (sort).
      </p>
      <PostText text="Wiem leniuszku, Å¼e nie chce Ci siÄ™ tam zaglÄ…daÄ‡, dlatego masz tutaj ten przykÅ‚ad:" />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> loveTriangle = [
            <span className="text-success">"ja"</span>,
            <span className="text-success"> "Nicole"</span>,
            <span className="text-success"> "Chris"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> sortedLoveTriangle =
            loveTriangle
            <span className="text-info">.</span>
            <span className="text-info">sort</span>
            <span className="text-success">{"("}</span>
            <span className="text-success">{")"}</span>
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">loveTriangle</span>)
            <span className="text-base-300">// ["Chris", "Nicole", "ja"]</span>
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">sortedLoveTriangle</span>)
            <span className="text-base-300"> // ["Chris", "Nicole", "ja"]</span>
          </code>
        </pre>
      </div>
      <PostText text="Jako, Å¼e nie liczy siÄ™ dÅ‚ugoÅ›Ä‡ rÃ³Å¼dÅ¼ki tylko umiejÄ™tnoÅ›ci magika, moÅ¼emy w bardzo Å‚atwy sposÃ³b wyczarowaÄ‡, by loveTriangle pozostaÅ‚ nienaruszony." />
      <PostText text="Hokus pokus:" />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> loveTriangle = [
            <span className="text-success">"ja"</span>,
            <span className="text-success"> "Nicole"</span>,
            <span className="text-success"> "Chris"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> sortedLoveTriangle =
            [...loveTriangle]
            <span className="text-info">.</span>
            <span className="text-info">sort</span>
            <span className="text-success">{"("}</span>
            <span className="text-success">{")"}</span>
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">loveTriangle</span>)
            <span className="text-base-300">// ["ja", "Nicole", "Chris"]</span>
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">sortedLoveTriangle</span>)
            <span className="text-base-300"> // ["Chris", "Nicole", "ja"]</span>
          </code>
        </pre>
      </div>
      <PostText text="No zobacz na tÄ… czarnÄ… magiÄ™. TrÃ³jkÄ…t miÅ‚osny pozostaÅ‚ nienaruszony. Dlaczego?" />
      <PostText text="Bo stworzyliÅ›my nowÄ… tablicÄ™, do ktÃ³rej wypakowaliÅ›my wszystko co byÅ‚o w tablicy loveTriangle. Ta tablica ma osobne miejsce w pamiÄ™ci." />
      <PostText text="Referencje prowadzÄ… zatem do dwÃ³ch rÃ³Å¼nych miejsc w heap (pamiÄ™ci)." />
      <PostTextBold text="MoÅ¼esz teÅ¼ poÅ‚Ä…czyÄ‡ dwie tablice w jednÄ…." />
      <PostText text="MoÅ¼na uÅ¼yÄ‡ do tego metody concat, ale bardziej popularne jest uÅ¼ycie spread." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> fruits = [
            <span className="text-success">"banan"</span>,
            <span className="text-success"> "plantan"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> veggies = [
            <span className="text-success">"bakÅ‚aÅ¼an"</span>,
            <span className="text-success"> "cukinia"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> mix = [
            <span className="text-neutral">...fruits</span>,
            <span className="text-neutral"> ...veggies</span>]
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">mix</span>)
            <span className="text-base-300">
              {" "}
              // ["banan", "plantan", "bakÅ‚aÅ¼an", "cukinia"]
            </span>
          </code>
        </pre>
      </div>
      <PostText text="StworzyliÅ›my wiÄ™c zdrowÄ… mieszankÄ™ warzywno-owocowÄ…, co by to nabraÄ‡ siÅ‚ na nastÄ™pny przykÅ‚ad." />
      <PostSubtitle subtitle="Obiekty a spread" />
      <PostText text="Wszystkie zasady obowiÄ…zujÄ…ce w tablicach dziaÅ‚ajÄ… analogicznie w obiektach." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <span className="text-base-300">// Å‚Ä…czenie obiektÃ³w</span>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> frontendDeveloper = {"{"}
            <span className="text-warning">name</span>:
            <span className="text-success"> "Krystian"</span>,
            <span className="text-warning"> isReadyToWork</span>:
            <span className="text-error"> true</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> character = {"{"}
            <span className="text-warning">senseOfHumour</span>:
            <span className="text-success"> "dark"</span>,
            <span className="text-warning"> funny</span>:
            <span className="text-error"> true</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> blogCreator = {"{"}
            <span className="text-neutral">...frontendDeveloper</span>,
            <span className="text-neutral"> ...character</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">blogCreator</span>)
            <span className="text-base-300">
              {" "}
              // {"{"} name: 'Krystian', isReadyToWork: true, senseOfHumour:
              'dark', funny: true{"}"}
            </span>
          </code>
        </pre>
        <pre></pre>
        <pre>
          <span className="text-base-300">
            // Å‚atwe stworzenie identycznego obiektu
          </span>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> copyOfBlogCreator = {"{"}
            <span className="text-neutral">...blogCreator</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">copyOfBlogCreator</span>)
            <span className="text-base-300">
              {" "}
              // {"{"} name: 'Krystian', isReadyToWork: true, senseOfHumour:
              'dark', funny: true{"}"}
            </span>
          </code>
        </pre>
      </div>
      <PostText text="No i sam zobacz, Å‚adnie poÅ‚Ä…czyliÅ›my w jeden obiekt (blogCreator) nasze dwa obiekty - frontendDeveloper oraz character. " />
      <PostText text="Bardzo teÅ¼ prosto stworzyliÅ›my identyczny obiekt. " />
      <PostText text="Z przykÅ‚adu wynika jasno i niepodwaÅ¼alnie, Å¼e..." />
      <PostTextBold text="Nie moÅ¼e byÄ‡ kopii Mnie." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">blogCreator</span> {"==="}
            <span className="text-warning"> copyOfBlogCreator</span>)
            <span className="text-base-300"> // false</span>
          </code>
        </pre>
      </div>
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        A nie mÃ³wiÅ‚em? JakbyÅ› nie wiedziaÅ‚ czemu tak siÄ™ dzieje, to poczytaj o{" "}
        <Link
          className="cursor-custom-pointer text-info"
          to={"/blog/typy-prymitywne-i-te-eleganckie-oraz-ich-referencje"}
        >
          referencji
        </Link>
        . Wiesz czemu? No to jestem prawie tak dumny jak matka puszczajÄ…ca
        gÃ³wniaka pierwszy raz do szkoÅ‚y. Tak szybko dorosÅ‚eÅ›ðŸ¥².
      </p>
      <p className="mb-4 text-lg leading-relaxed text-primary md:my-2 lg:mb-4 lg:mt-5 lg:text-2xl">
        <span className="font-bold">
          {" "}
          PragnÄ™ byÄ‡ nietypowy, niepowtarzalny, jednorazowy i oryginalny{" "}
        </span>
        - jak to rapowaÅ‚ Fokus w Paktofonice. Gimby nie znajo.
      </p>
      <PostTextBold text="I co tam jeszcze wariacie w repertuarze?" />
      <PostText text="MoÅ¼emy zrobiÄ‡ teÅ¼ coÅ› co bardzo Å‚atwo zdarzyÄ‡ siÄ™ moÅ¼e w koreaÅ„skim szpitalu na oddziale poÅ‚oÅ¼niczym, tzn. podmieniÄ‡ bobasa (po naszemu wartoÅ›Ä‡)." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> babyOne = {"{"}
            <span className="text-warning">name</span>:
            <span className="text-success"> "Pak Choi"</span>,
            <span className="text-warning"> isLovely</span>:
            <span className="text-error"> true</span>,
            <span className="text-warning"> male</span>:
            <span className="text-error"> true</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> myBaby = {"{"}
            <span className="text-neutral">...babyOne</span>,
            <span className="text-warning"> name</span>:
            <span className="text-success"> "Ding Dong"</span>
            {"}"}
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">myBaby</span>)
            <span className="text-base-300">
              {" "}
              // {"{"} name: 'Ding Dong', isLovely: true, male: true{"}"}
            </span>
          </code>
        </pre>
      </div>
      <PostText text="Jak widzisz matuchna, ktÃ³ra dostanie myBaby, nie bÄ™dzie miaÅ‚a nawet pojÄ™cia, Å¼e to byÅ‚ maluszek - Pak Choi, bo pielÄ™gniarka zdÄ…Å¼yÅ‚a mu przylepiÄ‡ metryczkÄ™ - Ding Dong." />
      <PostText text="MÃ³wiÄ…c bardziej technicznie, jeÅ›li klucz wystÄ™puje w spread i taki sam klucz wystÄ™puje po spread, to wartoÅ›ciÄ… jakÄ… bÄ™dzie miaÅ‚ klucz bÄ™dzie ostatnia wartoÅ›Ä‡ jaka siÄ™ pojawiÅ‚a. Ding Dong. " />
      <PostSubtitle subtitle="Stringi a spread" />
      <PostText text="To tak na szybciora, bo mamy jeszcze argumenty do omÃ³wienia." />
      <PostText text="JeÅ›li mamy stringa i uÅ¼yjemy na nim spread w tablicy, poszatkuje nam caÅ‚y string na tycie literki, cyferki czy co tam mamy." />
      <PostText text="PrzykÅ‚ad:" />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> youtuber ={" "}
            <span className="text-success">"Klocuch"</span>
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> array = [
            <span className="text-neutral">...youtuber</span>]
          </code>
        </pre>
        <pre>
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-warning">array</span>)
            <span className="text-base-300">
              {" "}
              // ["K", "l", "o", "c", "u", "c", "h"]
            </span>
          </code>
        </pre>
      </div>
      <PostText text="Nie zaimponujesz tym dziewczynie, ale przynajmniej bÄ™dziesz mÃ³gÅ‚ popatrzeÄ‡ sobie na stringi." />
      <PostSubtitle subtitle="Argumenty a spread" />
      <PostText text="Spread moÅ¼esz zaaplikowaÄ‡ podczas wywoÅ‚ywania funkcji w miejsce, gdzie podaje siÄ™ argumenty." />
      <div className="mockup-code mb-4 bg-primary text-neutral">
        <pre>
          <code>
            <span className="text-accent">const</span> threeMusketeers = [
            <span className="text-success">"Mickey"</span>,
            <span className="text-success">"Goofy"</span>,
            <span className="text-success">"Donald"</span>]
          </code>
        </pre>
        <pre>
          <code>
            <span className="text-accent">const</span> getDisneyCharacters ={" "}
            <span className="text-info">
              (<span className="text-neutral">a, b, c, d = 'Pluto'</span>)
            </span>{" "}
            <span>{"=> {"}</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">a</span>)
            <span className="text-base-300">// "Mickey"</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">b</span>)
            <span className="text-base-300">// "Goofy"</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">c</span>)
            <span className="text-base-300">// "Donald"</span>
          </code>
        </pre>
        <pre className="ml-6">
          <code>
            console<span className="text-info">.log</span>(
            <span className="text-success">d</span>)
            <span className="text-base-300">// "Pluto"</span>
          </code>
        </pre>
        <pre>
          <span>{"}"}</span>
        </pre>
        <pre>
          <code>
            <span className="text-accent">getDisneyCharacters</span>
            <span className="text-info">
              (<span className="text-neutral">...threeMusketeers</span>)
            </span>
          </code>
        </pre>
      </div>
      <PostText text="Jako, Å¼e tablica skÅ‚adaÅ‚a siÄ™ z trzech stringÃ³w, tak na prawdÄ™ podczas wywoÅ‚ywania funkcji getDisneyCharacters wÅ‚aÅ›nie one trafiajÄ… jako parametry do funkcji." />
      <PostText text="Nasza poczciwa psina Pluto podstawiÅ‚ siÄ™ za czwarty parametr jako wartoÅ›Ä‡ domyÅ›lna. W przeciwnym przypadku dostalibyÅ›my undefined." />
      <PostText text="Gdyby nasza tablica muszkieterÃ³w miaÅ‚a tylko dwa stringi, a parametrÃ³w byÅ›my nie ruszali to otrzymalibyÅ›my:" />
      <PostTextBold text='"Mickey", "Goofy", undefined, "Pluto"' />
      <PostText text="Sorry Donald, nie tym razem." />
      <PostText text="Gdyby nasza tablica muszkieterÃ³w miaÅ‚a natomiast aÅ¼ 4 stringi (np. czwarty string to Daisy), no to wiadomix, Å¼e Pluto by siÄ™ nie pokazaÅ‚." />
      <PostTextBold text='"Mickey", "Goofy", "Donald", "Daisy"' />
      <PostText text="To chyba tyle." />
      <PostSubtitle subtitle="Na koniec..." />
      <PostText text="PocieszÄ™ CiÄ™, juÅ¼ wiÄ™cej infantylnych przykÅ‚adÃ³w na dziÅ› nie zaznasz, ale tak, kÅ‚Ä™biÄ… siÄ™ one po mojej gÅ‚owie i wyskoczÄ… w najmniej oczekiwanym momencie." />
      <PostText text="Wiesz teÅ¼, Å¼e trzy kropki to coÅ› wiÄ™cej niÅ¼ przerwana wypowiedÅº - to sposÃ³b na uÅ‚atwienie Å¼ycia niejednemu programiÅ›cie." />
      <PostTextBold text="Rest zbiera resztki, a spread rozpiernicza." />
      <PostText text="CzoÅ‚em, do nastÄ™pnego." />
    </div>
  );
};
export default Post7;
